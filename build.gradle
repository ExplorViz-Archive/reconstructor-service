plugins {
  id 'java'
  id 'io.quarkus'
  id 'com.adarshr.test-logger' version '2.1.0'
  id "com.commercehub.gradle.plugin.avro" version "0.21.0"
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url "https://packages.confluent.io/maven/"
  }
}

// Fix: com.datastax.oss:* uses old, mandatory Groovy version
configurations.all {
  resolutionStrategy.force group: 'org.codehaus.groovy', name: 'groovy-json', version: '2.5.7'
  resolutionStrategy.force group: 'org.codehaus.groovy', name: 'groovy', version: '2.5.7'
}

dependencies {
  implementation 'io.quarkus:quarkus-kafka-streams'
  implementation 'io.quarkus:quarkus-kafka-client'

  implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")

  implementation group: 'com.datastax.oss', name: 'java-driver-core', version: '4.6.1'
  implementation group: 'com.datastax.oss', name: 'java-driver-query-builder', version: '4.6.1'
  implementation group: 'org.apache.avro', name: 'avro', version: '1.9.2'
  // Schema registry
  implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '5.5.0'
  implementation group: 'io.confluent', name: 'kafka-streams-avro-serde', version: '5.5.0'

  testImplementation 'io.quarkus:quarkus-junit5'
  testImplementation 'io.rest-assured:rest-assured'
  testImplementation "org.mockito:mockito-core:2.+"

  testImplementation group: 'org.cassandraunit', name: 'cassandra-unit', version: '4.3.1.0'
}
group 'net.explorviz'
version '1.0.0-SNAPSHOT'

compileJava {
  options.encoding = 'UTF-8'
  options.compilerArgs << '-parameters'
}

compileTestJava {
  options.encoding = 'UTF-8'
}

java {
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
}

test {
  systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

task buildDockerJVM(type: Exec) {
  commandLine './gradlew', '-x', 'test', 'build'

  commandLine 'docker', 'build', '-t', 'explorviz/explorviz-adapter-service', '-f', 'src/main/docker/Dockerfile.jvm', '.'

  description = 'Builds Docker image for JVM.'
  group = 'docker'
}

task buildDockerNative(type: Exec) {
  commandLine './gradlew', '-x', 'test', 'build', '-Dquarkus.package.type=native', '-Dquarkus.native.container-build=true'
  commandLine 'docker', 'build', '-t', 'explorviz/explorviz-adapter-service:native', '-f', 'src/main/docker/Dockerfile.native', '.'

  description = 'Builds Docker image with native-image executable.'
  group = 'docker'
}

package net.explorviz.reconstructor;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.json.JsonMapper;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import net.explorviz.landscape.flat.LandscapeRecord;


/**
 * Loads sample {@link LandscapeRecord} objects out of a json file located
 * in the resources directory. Used for testing/debugging only.
 */
public final class SampleLoaderUtil {

  private static String SIMPLE = "samples/sampleApplicationRecords.json";

  private SampleLoaderUtil() {/* Utility */}


  /**
   * Loads a list of {@link LandscapeRecord} from file {@code sampleApplicationRecords.json}.
   * This file contains the (unique) records generated by instrumenting the sample application.
   *
   * @return the list of records
   * @throws IOException if the list could not be loaded
   */
  public static List<LandscapeRecord> loadSampleApplication() throws IOException {
    InputStream recordInputStream =
        SampleLoaderUtil.class.getClassLoader().getResourceAsStream(SIMPLE);

    ObjectMapper mapper = new JsonMapper();
    return mapper.readValue(recordInputStream, new TypeReference<List<LandscapeRecord>>() {
    });
  }



}
